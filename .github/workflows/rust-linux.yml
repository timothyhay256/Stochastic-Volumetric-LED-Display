name: Build for Linux x86_64

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-x86_64:
    name: Build for x86_64 Linux
    runs-on: [self-hosted, Linux]

    steps:
      - uses: actions/checkout@v4

      # Pull opencv source, unzip, configure cmake, build, and install
      # Disable image formats like jpeg, png, tiff, as we use rust image crate instead.  See https://docs.opencv.org/4.x/db/d05/tutorial_config_reference.html
      # Inspired from https://github.com/twistedfall/opencv-rust/issues/364
      - name: Install OpenCV static lib
        run: |
          wget -O opencv.zip https://github.com/opencv/opencv/archive/refs/tags/4.8.1.zip
          wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/refs/tags/4.8.1.zip
          unzip opencv.zip && rm opencv.zip
          unzip opencv_contrib.zip && rm opencv_contrib.zip
          mkdir -p build && cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=NO -DCMAKE_INSTALL_PREFIX=$PWD/../opencv-install -DBUILD_DOCS=OFF -DBUILD_EXAMPLES=OFF -DBUILD_TESTS=OFF -DBUILD_PERF_TESTS=OFF -DBUILD_opencv_python=OFF -DOPENCV_EXTRA_MODULES_PATH=../opencv_contrib-4.8.1/modules ../opencv-4.8.1
          cmake --build . --target install --config Release --parallel 28
          cmake --install . --prefix $PWD/../opencv-install
          cd ..

      # Note: OPENCV_LINK_LIBS ordering matters for linux.  Put lower level deps after higher level.  See https://answers.opencv.org/question/186124/undefined-reference-to-cvsoftdoubleoperator/
      # libclang files are in /usr/lib/llvm-##/lib.  We symlink it to one of the opencv_link_paths
      # OpenCV-rust looks for "opencv2/core/version.hpp" for the OpenCV version: https://github.com/twistedfall/opencv-rust/issues/368
      #  which is under /<install-prefix>/include/opencv4 for linux
      # Build
      - name: Build
        run: |
          export OPENCV_LINK_LIBS="opencv_videoio,opencv_imgcodecs,opencv_imgproc,opencv_core,libippiw,libittnotify,libippicv,z"
          export OPENCV_LINK_PATHS=$PWD/opencv-install/lib,$PWD/opencv-install/lib/opencv4/3rdparty,/usr/lib/x86_64-linux-gnu
          export OPENCV_INCLUDE_PATHS=$PWD/opencv-install/include,$PWD/opencv-install/include/opencv4
          # sudo ln -s /usr/lib/llvm-15/lib/libclang.so.1 /usr/lib/x86_64-linux-gnu/libclang.so
          # ls -R $PWD/opencv-install/
          # ls -R /usr/lib
          cargo build --release

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-x86_64
          path: target/release/svled